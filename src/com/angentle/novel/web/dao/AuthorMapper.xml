<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.angentle.novel.web.dao.AuthorMapper">
  <resultMap id="BaseResultMap" type="com.angentle.novel.web.model.Author">
    <id column="author_id" jdbcType="CHAR" property="authorId" />
    <result column="author_name" jdbcType="VARCHAR" property="authorName" />
    <result column="author_realname" jdbcType="VARCHAR" property="authorRealname" />
    <result column="honor" jdbcType="CHAR" property="honor" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="id_number" jdbcType="CHAR" property="idNumber" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="mobile" jdbcType="CHAR" property="mobile" />
    <result column="mobile_zone_code" jdbcType="CHAR" property="mobileZoneCode" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="user_id" jdbcType="CHAR" property="userId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    author_id, author_name, author_realname, honor, level, id_number, sex, mobile, mobile_zone_code, 
    email, address, user_id
  </sql>
  <select id="selectByExample" parameterType="com.angentle.novel.web.model.AuthorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from author
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from author
    where author_id = #{authorId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from author
    where author_id = #{authorId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.angentle.novel.web.model.AuthorExample">
    delete from author
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.angentle.novel.web.model.Author">
    insert into author (author_id, author_name, author_realname, 
      honor, level, id_number, sex, 
      mobile, mobile_zone_code, email, 
      address, user_id)
    values (#{authorId,jdbcType=CHAR}, #{authorName,jdbcType=VARCHAR}, #{authorRealname,jdbcType=VARCHAR}, 
      #{honor,jdbcType=CHAR}, #{level,jdbcType=INTEGER}, #{idNumber,jdbcType=CHAR}, #{sex,jdbcType=CHAR}, 
      #{mobile,jdbcType=CHAR}, #{mobileZoneCode,jdbcType=CHAR}, #{email,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{userId,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.angentle.novel.web.model.Author">
    insert into author
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="authorId != null">
        author_id,
      </if>
      <if test="authorName != null">
        author_name,
      </if>
      <if test="authorRealname != null">
        author_realname,
      </if>
      <if test="honor != null">
        honor,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="idNumber != null">
        id_number,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="mobileZoneCode != null">
        mobile_zone_code,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="authorId != null">
        #{authorId,jdbcType=CHAR},
      </if>
      <if test="authorName != null">
        #{authorName,jdbcType=VARCHAR},
      </if>
      <if test="authorRealname != null">
        #{authorRealname,jdbcType=VARCHAR},
      </if>
      <if test="honor != null">
        #{honor,jdbcType=CHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="idNumber != null">
        #{idNumber,jdbcType=CHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=CHAR},
      </if>
      <if test="mobileZoneCode != null">
        #{mobileZoneCode,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.angentle.novel.web.model.AuthorExample" resultType="java.lang.Long">
    select count(*) from author
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update author
    <set>
      <if test="record.authorId != null">
        author_id = #{record.authorId,jdbcType=CHAR},
      </if>
      <if test="record.authorName != null">
        author_name = #{record.authorName,jdbcType=VARCHAR},
      </if>
      <if test="record.authorRealname != null">
        author_realname = #{record.authorRealname,jdbcType=VARCHAR},
      </if>
      <if test="record.honor != null">
        honor = #{record.honor,jdbcType=CHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.idNumber != null">
        id_number = #{record.idNumber,jdbcType=CHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=CHAR},
      </if>
      <if test="record.mobileZoneCode != null">
        mobile_zone_code = #{record.mobileZoneCode,jdbcType=CHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update author
    set author_id = #{record.authorId,jdbcType=CHAR},
      author_name = #{record.authorName,jdbcType=VARCHAR},
      author_realname = #{record.authorRealname,jdbcType=VARCHAR},
      honor = #{record.honor,jdbcType=CHAR},
      level = #{record.level,jdbcType=INTEGER},
      id_number = #{record.idNumber,jdbcType=CHAR},
      sex = #{record.sex,jdbcType=CHAR},
      mobile = #{record.mobile,jdbcType=CHAR},
      mobile_zone_code = #{record.mobileZoneCode,jdbcType=CHAR},
      email = #{record.email,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.angentle.novel.web.model.Author">
    update author
    <set>
      <if test="authorName != null">
        author_name = #{authorName,jdbcType=VARCHAR},
      </if>
      <if test="authorRealname != null">
        author_realname = #{authorRealname,jdbcType=VARCHAR},
      </if>
      <if test="honor != null">
        honor = #{honor,jdbcType=CHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="idNumber != null">
        id_number = #{idNumber,jdbcType=CHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=CHAR},
      </if>
      <if test="mobileZoneCode != null">
        mobile_zone_code = #{mobileZoneCode,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=CHAR},
      </if>
    </set>
    where author_id = #{authorId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.angentle.novel.web.model.Author">
    update author
    set author_name = #{authorName,jdbcType=VARCHAR},
      author_realname = #{authorRealname,jdbcType=VARCHAR},
      honor = #{honor,jdbcType=CHAR},
      level = #{level,jdbcType=INTEGER},
      id_number = #{idNumber,jdbcType=CHAR},
      sex = #{sex,jdbcType=CHAR},
      mobile = #{mobile,jdbcType=CHAR},
      mobile_zone_code = #{mobileZoneCode,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=CHAR}
    where author_id = #{authorId,jdbcType=CHAR}
  </update>
</mapper>