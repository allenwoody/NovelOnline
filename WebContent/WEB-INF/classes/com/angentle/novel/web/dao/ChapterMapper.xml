<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.angentle.novel.web.dao.ChapterMapper">
  <resultMap id="BaseResultMap" type="com.angentle.novel.web.model.Chapter">
    <id column="chapter_id" jdbcType="CHAR" property="chapterId" />
    <result column="novel_id" jdbcType="CHAR" property="novelId" />
    <result column="chapter_name" jdbcType="VARCHAR" property="chapterName" />
    <result column="chapter_volumn" jdbcType="INTEGER" property="chapterVolumn" />
    <result column="chapter_no" jdbcType="INTEGER" property="chapterNo" />
    <result column="chapter_type" jdbcType="CHAR" property="chapterType" />
    <result column="chapter_status" jdbcType="CHAR" property="chapterStatus" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.angentle.novel.web.model.ChapterWithBLOBs">
    <result column="chapter_content" jdbcType="LONGVARCHAR" property="chapterContent" />
    <result column="author_speak" jdbcType="LONGVARCHAR" property="authorSpeak" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    chapter_id, novel_id, chapter_name, chapter_volumn, chapter_no, chapter_type, chapter_status
  </sql>
  <sql id="Blob_Column_List">
    chapter_content, author_speak
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.angentle.novel.web.model.ChapterExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.angentle.novel.web.model.ChapterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from chapter
    where chapter_id = #{chapterId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from chapter
    where chapter_id = #{chapterId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.angentle.novel.web.model.ChapterExample">
    delete from chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.angentle.novel.web.model.ChapterWithBLOBs">
    insert into chapter (chapter_id, novel_id, chapter_name, 
      chapter_volumn, chapter_no, chapter_type, 
      chapter_status, chapter_content, author_speak
      )
    values (#{chapterId,jdbcType=CHAR}, #{novelId,jdbcType=CHAR}, #{chapterName,jdbcType=VARCHAR}, 
      #{chapterVolumn,jdbcType=INTEGER}, #{chapterNo,jdbcType=INTEGER}, #{chapterType,jdbcType=CHAR}, 
      #{chapterStatus,jdbcType=CHAR}, #{chapterContent,jdbcType=LONGVARCHAR}, #{authorSpeak,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.angentle.novel.web.model.ChapterWithBLOBs">
    insert into chapter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="chapterId != null">
        chapter_id,
      </if>
      <if test="novelId != null">
        novel_id,
      </if>
      <if test="chapterName != null">
        chapter_name,
      </if>
      <if test="chapterVolumn != null">
        chapter_volumn,
      </if>
      <if test="chapterNo != null">
        chapter_no,
      </if>
      <if test="chapterType != null">
        chapter_type,
      </if>
      <if test="chapterStatus != null">
        chapter_status,
      </if>
      <if test="chapterContent != null">
        chapter_content,
      </if>
      <if test="authorSpeak != null">
        author_speak,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="chapterId != null">
        #{chapterId,jdbcType=CHAR},
      </if>
      <if test="novelId != null">
        #{novelId,jdbcType=CHAR},
      </if>
      <if test="chapterName != null">
        #{chapterName,jdbcType=VARCHAR},
      </if>
      <if test="chapterVolumn != null">
        #{chapterVolumn,jdbcType=INTEGER},
      </if>
      <if test="chapterNo != null">
        #{chapterNo,jdbcType=INTEGER},
      </if>
      <if test="chapterType != null">
        #{chapterType,jdbcType=CHAR},
      </if>
      <if test="chapterStatus != null">
        #{chapterStatus,jdbcType=CHAR},
      </if>
      <if test="chapterContent != null">
        #{chapterContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="authorSpeak != null">
        #{authorSpeak,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.angentle.novel.web.model.ChapterExample" resultType="java.lang.Long">
    select count(*) from chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update chapter
    <set>
      <if test="record.chapterId != null">
        chapter_id = #{record.chapterId,jdbcType=CHAR},
      </if>
      <if test="record.novelId != null">
        novel_id = #{record.novelId,jdbcType=CHAR},
      </if>
      <if test="record.chapterName != null">
        chapter_name = #{record.chapterName,jdbcType=VARCHAR},
      </if>
      <if test="record.chapterVolumn != null">
        chapter_volumn = #{record.chapterVolumn,jdbcType=INTEGER},
      </if>
      <if test="record.chapterNo != null">
        chapter_no = #{record.chapterNo,jdbcType=INTEGER},
      </if>
      <if test="record.chapterType != null">
        chapter_type = #{record.chapterType,jdbcType=CHAR},
      </if>
      <if test="record.chapterStatus != null">
        chapter_status = #{record.chapterStatus,jdbcType=CHAR},
      </if>
      <if test="record.chapterContent != null">
        chapter_content = #{record.chapterContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.authorSpeak != null">
        author_speak = #{record.authorSpeak,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update chapter
    set chapter_id = #{record.chapterId,jdbcType=CHAR},
      novel_id = #{record.novelId,jdbcType=CHAR},
      chapter_name = #{record.chapterName,jdbcType=VARCHAR},
      chapter_volumn = #{record.chapterVolumn,jdbcType=INTEGER},
      chapter_no = #{record.chapterNo,jdbcType=INTEGER},
      chapter_type = #{record.chapterType,jdbcType=CHAR},
      chapter_status = #{record.chapterStatus,jdbcType=CHAR},
      chapter_content = #{record.chapterContent,jdbcType=LONGVARCHAR},
      author_speak = #{record.authorSpeak,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update chapter
    set chapter_id = #{record.chapterId,jdbcType=CHAR},
      novel_id = #{record.novelId,jdbcType=CHAR},
      chapter_name = #{record.chapterName,jdbcType=VARCHAR},
      chapter_volumn = #{record.chapterVolumn,jdbcType=INTEGER},
      chapter_no = #{record.chapterNo,jdbcType=INTEGER},
      chapter_type = #{record.chapterType,jdbcType=CHAR},
      chapter_status = #{record.chapterStatus,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.angentle.novel.web.model.ChapterWithBLOBs">
    update chapter
    <set>
      <if test="novelId != null">
        novel_id = #{novelId,jdbcType=CHAR},
      </if>
      <if test="chapterName != null">
        chapter_name = #{chapterName,jdbcType=VARCHAR},
      </if>
      <if test="chapterVolumn != null">
        chapter_volumn = #{chapterVolumn,jdbcType=INTEGER},
      </if>
      <if test="chapterNo != null">
        chapter_no = #{chapterNo,jdbcType=INTEGER},
      </if>
      <if test="chapterType != null">
        chapter_type = #{chapterType,jdbcType=CHAR},
      </if>
      <if test="chapterStatus != null">
        chapter_status = #{chapterStatus,jdbcType=CHAR},
      </if>
      <if test="chapterContent != null">
        chapter_content = #{chapterContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="authorSpeak != null">
        author_speak = #{authorSpeak,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where chapter_id = #{chapterId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.angentle.novel.web.model.ChapterWithBLOBs">
    update chapter
    set novel_id = #{novelId,jdbcType=CHAR},
      chapter_name = #{chapterName,jdbcType=VARCHAR},
      chapter_volumn = #{chapterVolumn,jdbcType=INTEGER},
      chapter_no = #{chapterNo,jdbcType=INTEGER},
      chapter_type = #{chapterType,jdbcType=CHAR},
      chapter_status = #{chapterStatus,jdbcType=CHAR},
      chapter_content = #{chapterContent,jdbcType=LONGVARCHAR},
      author_speak = #{authorSpeak,jdbcType=LONGVARCHAR}
    where chapter_id = #{chapterId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.angentle.novel.web.model.Chapter">
    update chapter
    set novel_id = #{novelId,jdbcType=CHAR},
      chapter_name = #{chapterName,jdbcType=VARCHAR},
      chapter_volumn = #{chapterVolumn,jdbcType=INTEGER},
      chapter_no = #{chapterNo,jdbcType=INTEGER},
      chapter_type = #{chapterType,jdbcType=CHAR},
      chapter_status = #{chapterStatus,jdbcType=CHAR}
    where chapter_id = #{chapterId,jdbcType=CHAR}
  </update>
</mapper>